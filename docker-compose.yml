version: '2'
services:
  traefik:
    image: traefik:latest
    command: --configFile=/var/traefik/traefik.toml
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/traefik.toml:/var/traefik/traefik.toml
      - $PWD/acme:/etc/acme

  smtp:
    image: "namshi/smtp"

  git:
    image: "gogs/gogs"
    # ports:
    #   - "10022:10022"
    #   - "10080:10080"
    volumes:
      - ./Gogs/:/data
    labels:
      - "traefik.enable=true"
      - "traefik.backend=git-server"
      - "traefik.frontend.rule=Host:git.docker.localhost"

  drone-server:
    image: drone/drone:0.5
    depends_on: [ git ]
    volumes:
      - ./drone:/var/lib/drone/
    # restart: always
    environment:
      - DRONE_OPEN=false
      - DRONE_GOGS=true
      - DRONE_GOGS_URL=http://git
      - DRONE_SECRET=123456
    labels:
      - "traefik.enable=true"
      - "traefik.backend=drone-server"
      - "traefik.frontend.rule=Host:drone.docker.localhost"


  drone-agent:
    image: drone/drone:0.5
    command: agent
    # restart: always
    depends_on: [ drone-server ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=123456

  rocketchat:
    image: rocketchat/rocket.chat:latest
    # restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://chat.docker.localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email
#       - HTTP_PROXY=http://proxy.domain.com
#       - HTTPS_PROXY=http://proxy.domain.com
    depends_on:
      - mongo
    # ports:
    #   - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host:chat.docker.localhost"

  mongo:
    image: mongo:3.2
    # restart: unless-stopped
    volumes:
     - ./data/db:/data/db
     - ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:3.2
    command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    depends_on:
      - mongo

  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    image: rocketchat/hubot-rocketchat:latest
    # restart: unless-stopped
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      - ROCKETCHAT_PASSWORD=botpassword
      - BOT_NAME=bot
  # you can add more scripts as you'd like here, they need to be installable by npm
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    volumes:
      - ./scripts:/home/hubot/scripts
